from aiogram import Bot, Dispatcher, types, executor
import string
import random

HELP_COMAND = '''
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/<b>start</b> - <em>–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º</em>
/description - –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
/random_letters - –æ—Ç–≤–µ—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º –∏–∑ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞
/count - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∑–æ–≤–æ–≤ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
# /count2 - –∫–æ–ª-–≤–æ "b" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
#/send_user_id - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–≤—à–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
/check_zero - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ 0
/sticker - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º —Å—Ç–∏–∫–µ—Ä
/id_stiker - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–¥—é id —Å—Ç–∏–∫–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª
/emoji - –æ—Ç–≤–µ—á–∞—Ç—å 
/–∫–∞—Ä—Ç–∏–Ω–∫–∞ - –≤—ã–≤–æ–¥–∏—Ç —Ñ–æ—Ç–æ (—É–∫–∞–∑—ã–≤–∞–µ–º –ª–∏–±–æ –ø—Ç—å –∫ —Ñ–∞–π–ª—É, –ª–∏–±–æ —Å—Å—ã–ª–∫—É —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞)
/location - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª –∫–∞—Ä—Ç—É —Å —Ç–æ—á–∫–æ–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
'''
TOKEN_API = '5834874802:AAGfg5faAVAf3Ra5aaBkjZlJM42_r9n207k'

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

count = 0

async def on(_):
    print('–±–æ—Ç –∑–∞–ø—É—â–µ–Ω (—Å–∏–ª—å–Ω–æ —Å–∏–ª—å–Ω–æ –∑–∞–ø—É—â–µ–Ω...))')



@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    # await bot.send_message(chat_id=message.from_id, text=HELP_COMAND, parse_mode='HTML') # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –ª–∏—á–∫—É
    # await message.delete() # —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.reply(text=HELP_COMAND, parse_mode='HTML') # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç

# @dp.message_handler()
# async def count_b(message: types.Message):
#     await message.answer(text=str(message.text.count('b')))
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(text="start_bot")

@dp.message_handler(commands=['description'])
async def description(message: types.Message):
    await message.answer('—Ç—É—Ç –ø–∏—à–µ–º <em>–æ–ø–∏—Å–∞–Ω–∏–µ</em> –≤–∞—à–µ–≥–æ <b>–±–æ—Ç–∞</b>', parse_mode='HTML') # –ú–û–ñ–ù–û –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –ù–ê–ß–ï–†–¢–ê–ù–ò–ï –†–ê–ó–ú–ï–¢–ö–û–ô HTML
    await message.delete()


@dp.message_handler(commands=['count'])
async def count_(message: types.Message):
    global count
    await message.answer(f'count = {count}')
    count += 1

@dp.message_handler(commands=['random_letters'])
async def rand_lett(message: types.Message):
    await message.answer(random.choice(string.ascii_letters))


@dp.message_handler(commands=['check_zero'])
async def check_zero(message: types.Message):
    if '0' in message.text:
        return await message.answer('yes')
    await message.answer('no')


@dp.message_handler(commands=['sticker'])
async def stick(message: types.Message):
    await bot.send_sticker(message.from_user.id, sticker="CAACAgIAAxkBAAEGnGBjhjFF0NrUltTf1A9gypK1sAAB8k8AAiAZAAJLDYlKFctt7myEf8srBA")


@dp.message_handler(content_types=['sticker'])
async def sticker_id(message: types.Message):
    await message.answer(message.sticker.file_id)


@dp.message_handler(commands=['emoji'])
async def em(message: types.Message):
    await message.reply(message.text + '\n üòÇ')

@dp.message_handler(commands='–∫–∞—Ä—Ç–∏–Ω–∫–∞')
async def image_send(message: types.Message):
    await bot.send_photo(chat_id=message.from_id,
                         photo='https://img2.akspic.ru/previews/5/8/2/8/6/168285/168285-astronavt-risovanie-kosmos-kosmicheskoe_prostranstvo-multfilm-500x.jpg')

@dp.message_handler(commands='location')
async def location_point(message: types.Message):
    await bot.send_location(chat_id=message.chat.id,
                            latitude=54.430827,
                            longitude=28.710073)
    await message.delete()


# @dp.message_handler()
# async def send_user_id(message: types.Message):
#     await bot.send_message(chat_id=message.from_user.id,text="helloolo") # –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ —á–∞—Ç–∞(((


if __name__ == "__main__":
    executor.start_polling(dp, on_startup=on, skip_updates= True) #skip_updates=True –±–æ—Ç –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—ã–ª–∞–ª–∏—Å—å –µ–º—É –∫–æ–≥–¥–∞ –æ–Ω –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω
